version: 2.1

jobs:
  terraform-apply:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout

      # Upload Configuration Step
      - run:
          name: Upload Configuration
          command: |
            # First create the configuration version
            echo "Creating configuration version..."
            config_response=$(curl --header "Authorization: Bearer $TF_API_TOKEN" \
                 --header "Content-Type: application/vnd.api+json" \
                 --request POST \
                 --data '{
                   "data": {
                     "type": "configuration-versions",
                     "attributes": {
                       "auto-queue-runs": false
                     },
                     "relationships": {
                       "workspace": {
                         "data": {
                           "type": "workspaces",
                           "id": "$WORKSPACE_ID"
                         }
                       }
                     }
                   }
                 }' \
                 https://app.terraform.io/api/v2/configuration-versions)
            
            # Extract the upload URL from the response
            upload_url=$(echo $config_response | jq -r '.data.attributes."upload-url"')
            
            # Create a tar.gz of your Terraform configuration
            tar -czf config.tar.gz *.tf
            
            # Upload the configuration
            echo "Uploading Terraform configuration..."
            curl --header "Content-Type: application/octet-stream" \
                 --request PUT \
                 --data-binary @config.tar.gz \
                 "$upload_url"
            
            # Wait a few seconds for the configuration to be processed
            sleep 10

      - run:
          name: Trigger Apply Run
          command: |
            echo "Starting Terraform apply run..."
            curl --header "Authorization: Bearer $TF_API_TOKEN" \
                 --header "Content-Type: application/vnd.api+json" \
                 --request POST \
                 --data '{
                   "data": {
                     "type": "runs",
                     "attributes": {
                       "is-destroy": false,
                       "auto-apply": true
                     },
                     "relationships": {
                       "workspace": {
                         "data": {
                           "type": "workspaces",
                           "id": "$WORKSPACE_ID"
                         }
                       }
                     }
                   }
                 }' \
                 https://app.terraform.io/api/v2/runs

  terraform-destroy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout

      - run:
          name: Upload Configuration
          command: |
            # First create the configuration version
            echo "Creating configuration version..."
            config_response=$(curl --header "Authorization: Bearer $TF_API_TOKEN" \
                 --header "Content-Type: application/vnd.api+json" \
                 --request POST \
                 --data '{
                   "data": {
                     "type": "configuration-versions",
                     "attributes": {
                       "auto-queue-runs": false
                     },
                     "relationships": {
                       "workspace": {
                         "data": {
                           "type": "workspaces",
                           "id": "$WORKSPACE_ID"
                         }
                       }
                     }
                   }
                 }' \
                 https://app.terraform.io/api/v2/configuration-versions)
            
            # Extract the upload URL from the response
            upload_url=$(echo $config_response | jq -r '.data.attributes."upload-url"')
            
            # Create a tar.gz of your Terraform configuration
            tar -czf config.tar.gz *.tf
            
            # Upload the configuration
            echo "Uploading Terraform configuration..."
            curl --header "Content-Type: application/octet-stream" \
                 --request PUT \
                 --data-binary @config.tar.gz \
                 "$upload_url"
            
            # Wait a few seconds for the configuration to be processed
            sleep 10

      - run:
          name: Trigger Destroy Run
          command: |
            echo "Starting Terraform destroy run..."
            curl --header "Authorization: Bearer $TF_API_TOKEN" \
                 --header "Content-Type: application/vnd.api+json" \
                 --request POST \
                 --data '{
                   "data": {
                     "type": "runs",
                     "attributes": {
                       "is-destroy": true,
                       "auto-apply": true
                     },
                     "relationships": {
                       "workspace": {
                         "data": {
                           "type": "workspaces",
                           "id": "$WORKSPACE_ID"
                         }
                       }
                     }
                   }
                 }' \
                 https://app.terraform.io/api/v2/runs

workflows:
  version: 2
  scheduled-apply:
    triggers:
      - schedule:
          cron: "15 1 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - terraform-apply

  scheduled-destroy:
    triggers:
      - schedule:
          cron: "20 1 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - terraform-destroy
